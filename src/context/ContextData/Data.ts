export const data = [
            {
                "id": "0",
                "name": "Super Mario",
                "static_img": "https://user-images.githubusercontent.com/26524921/171071258-e496dfb3-7057-41a8-9ecb-f32eecf8cbcc.png",
                "description_img": "https://user-images.githubusercontent.com/26524921/210449653-407ce35f-5bfa-4db3-b265-841b600ae1ca.png",
                "short_description": "Jogo Criado utilizando Javacript e DOM para manipulação de classes do CSS",
                "full_description": "Jogo Criado utilizando Javacript e DOM para manipulação de classes do CSS",
                "link_web":"https://jonathancosta746.github.io/Game-SuperMario/",
                "link_github": "https://github.com/jonathancosta746/Game-SuperMario",
                "link_youtube": "https://www.youtube.com/watch?v=4WDCv1O13AY&t",
            },
            {
                "id": "1",
                "name": "Imobiliaria Landing Page",
                "static_img": "/images/projects/landingpage_imobiliaria/home_image.png",
                "description_img": "/images/projects/landingpage_imobiliaria/description_image.png",
                "short_description": "LandingPage criada para Imobiliária ou Corretores de Imóveis com formulario de contato",
                "full_description": "Landing Page criada para uma corretores de imóveis ou imobiliárias, onde há integração com a biblioteca SwiperJS para criação de slides na sessão onde é exibido os principais imóveis da carteira da imobiliaria ou do corretor. O projeto também possui integração com a biblioteca do FormSpree fazendo com que seja possível os clientes enviarem uma solicitação de contato onde será recebida no email da corretora e a mesma poderá encaminhar para que seus corretores entrem em contato com o cliente.",
                "link_web":"https://jonathancosta746.github.io/Imobiliaria-Landing-Page/",
                "link_github": "https://github.com/jonathancosta746/Imobiliaria-Landing-Page",
                "link_youtube": "https://www.youtube.com/@JonathanCosta746/videos",
            },
            {
                "id": "2",
                "name": "Netlix Clone",
                "static_img": "https://user-images.githubusercontent.com/26524921/174926730-ca35dbe7-edd4-4d58-8ada-234984ee2e06.png",
                "description_img": "https://user-images.githubusercontent.com/26524921/210449653-407ce35f-5bfa-4db3-b265-841b600ae1ca.png",
                "short_description": "Clone da HomePage de usuário da Netflix criado com React.JS consumindo a API do TMDB",
                "full_description": "Clone da HomePage de usuário da Netflix criado com React.JS consumindo a API do TMDB para busca de filme principal da HomePage e filmes das listas de gêneros.",
                "link_web":"https://netflix-clone-react-jsc.netlify.app/",
                "link_github": "https://github.com/jonathancosta746/Netflix-Clone-React-Js",
                "link_youtube": "https://www.youtube.com/watch?v=A6O_-JCGnmA",
            },
            {
                "id": "3",
                "name": "Blog",
                "static_img": "https://user-images.githubusercontent.com/26524921/167458724-cd32a1ee-0909-42bb-b3d5-49a2a5afc1f2.png",
                "description_img": "https://user-images.githubusercontent.com/26524921/210449653-407ce35f-5bfa-4db3-b265-841b600ae1ca.png",
                "short_description": "Blog criado utilizando React.Js e seu banco de dados hospedado no Firebase",
                "full_description": "Blog criado durante o curso React do Zero a Maestria (c/ hooks, router, API, Projetos) ministrado pelo desenvolvedor Matheus Battisti na plataforma Udemy. No blog é possivel que o usuário crie sua conta pessoal, e após efetuado login poste imagens e textos, sendo possivel posteiormente sua edição e exclusão dos posts.",
                "link_web":"https://mini-blog-react-js.netlify.app/",
                "link_github": "https://github.com/jonathancosta746/Mini-blog-React-Js",
                "link_youtube": "https://www.youtube.com/@JonathanCosta746/videos",
            },
            {
                "id": "4",
                "name": "Hospital Site",
                "static_img": "/images/projects/landingpage_hospital/home_image.png",
                "description_img": "/images/projects/landingpage_hospital/description_image.png",
                "short_description": "Landing Page criada para uma Clínica ou Hospital, com formulário para agendamento de consultas e envio de sugestões, criticas ou dúvidas.",
                "full_description": "Landing Page criada para uma Clínica ou Hospital, onde há integração com a biblioteca SwiperJS para efeitos de slides na sessão onde é exibida a equipe médica da instituição, e integração com a plataforma FormSpree, sendo assim inserido um formulario no site fazendo com que seja possível os pacientes enviarem solicitação de marcação de consultas, marcação de exames, sugestões, criticas ou dúvidas.",
                "link_web":"https://jonathancosta746.github.io/LandingPage-Clinica-Hospital/",
                "link_github": "https://github.com/jonathancosta746/LandingPage-Clinica-Hospital",
                "link_youtube": "https://www.youtube.com/watch?v=aQgqUxPKTMY&t=54s",
            },
            {
                "id": "5",
                "name": "To-do List",
                "static_img": "https://user-images.githubusercontent.com/26524921/187376974-c8d76a1d-7cf6-4146-a2de-c4783eb7d096.png",
                "description_img": "https://user-images.githubusercontent.com/26524921/210449653-407ce35f-5bfa-4db3-b265-841b600ae1ca.png",
                "short_description": "Gerenciador de tarefas criado como SPA (single page aplication) utilizando React no seu front-end e FireBase em seu back-end.",
                "full_description": "Gerenciador de tarefas criado como SPA (single page aplication) utilizando React no seu front-end e o banco de dados FireBase em seu back-end. O aplicação possui campo de login e cadastro de usuário onde cada usuário pode registrar suas tarefas salvando-as no bando de dados Firebase na nuvem. No projeto foram utilizados React Router para criação das rotas públicas e privadas.",
                "link_web":"https://gerenciadortarefas-react-js.netlify.app/",
                "link_github": "https://github.com/jonathancosta746/Gerenciador-de-Tarefas-React-Js",
                "link_youtube": "",
            },
            {
                "id": "6",
                "name": "Interface Administrador - Loja",
                "static_img": "https://user-images.githubusercontent.com/26524921/163629344-e60601d5-7aff-4ed4-8a7d-a386a2c99c02.png",
                "description_img": "https://user-images.githubusercontent.com/26524921/210614766-4f827e14-1ab4-494b-90fe-fbc4ebdc17b1.png",
                "short_description": "O Projeto consiste no Front-End da parte administrativa de uma loja virtual",
                "full_description": "Projeto focado na criação do Front-end da parte administrativa de uma loja virtual.",
                "link_web":"https://jonathancosta746.github.io/Loja-Interface-Administrador/",
                "link_github": "https://github.com/jonathancosta746/Loja-Interface-Administrador",
                "link_youtube": "https://www.youtube.com/watch?v=cZ9C1Ph4IsU",
            },
        ]
